{"ast":null,"code":"import { ethers, Contract } from \"ethers\";\nimport DAOArtifact from \"../abis/DAO.json\";\nimport ContractAddress from \"../abis/contract-address.json\";\nimport Swal from \"sweetalert2\";\n\nconst getBlockchain = () => new Promise(async (resolve, reject) => {\n  if (window.ethereum) {\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\"\n    });\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const signer = provider.getSigner();\n    const signerAddress = await signer.getAddress();\n    const DAOContract = new Contract(ContractAddress.DAO, DAOArtifact.abi, signer);\n    resolve({\n      signerAddress,\n      DAOContract\n    });\n  }\n\n  resolve({\n    signerAddress: undefined,\n    DAOContract: undefined\n  });\n});\n\nfunction showError(error) {\n  Swal.fire({\n    icon: \"error\",\n    title: \"Transaction Failed\",\n    text: error.toString()\n  });\n}\n\nexport { getBlockchain, showError };","map":{"version":3,"names":["ethers","Contract","DAOArtifact","ContractAddress","Swal","getBlockchain","Promise","resolve","reject","window","ethereum","request","method","provider","providers","Web3Provider","signer","getSigner","signerAddress","getAddress","DAOContract","DAO","abi","undefined","showError","error","fire","icon","title","text","toString"],"sources":["/home/branko/workspaces/personal/eat-the-blocks/week-4/frontend/src/utils/common.js"],"sourcesContent":["import { ethers, Contract } from \"ethers\";\nimport DAOArtifact from \"../abis/DAO.json\";\nimport ContractAddress from \"../abis/contract-address.json\";\nimport Swal from \"sweetalert2\";\n\nconst getBlockchain = () =>\n  new Promise(async (resolve, reject) => {\n    if (window.ethereum) {\n      await window.ethereum.request({ method: \"eth_requestAccounts\" });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const signerAddress = await signer.getAddress();\n\n      const DAOContract = new Contract(\n        ContractAddress.DAO,\n        DAOArtifact.abi,\n        signer\n      );\n\n      resolve({ signerAddress, DAOContract });\n    }\n    resolve({ signerAddress: undefined, DAOContract: undefined });\n  });\n\nfunction showError(error) {\n  Swal.fire({\n    icon: \"error\",\n    title: \"Transaction Failed\",\n    text: error.toString(),\n  });\n}\n\nexport { getBlockchain, showError };\n"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,QAAjC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,MAAMC,aAAa,GAAG,MACpB,IAAIC,OAAJ,CAAY,OAAOC,OAAP,EAAgBC,MAAhB,KAA2B;EACrC,IAAIC,MAAM,CAACC,QAAX,EAAqB;IACnB,MAAMD,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB;MAAEC,MAAM,EAAE;IAAV,CAAxB,CAAN;IACA,MAAMC,QAAQ,GAAG,IAAIb,MAAM,CAACc,SAAP,CAAiBC,YAArB,CAAkCN,MAAM,CAACC,QAAzC,CAAjB;IACA,MAAMM,MAAM,GAAGH,QAAQ,CAACI,SAAT,EAAf;IACA,MAAMC,aAAa,GAAG,MAAMF,MAAM,CAACG,UAAP,EAA5B;IAEA,MAAMC,WAAW,GAAG,IAAInB,QAAJ,CAClBE,eAAe,CAACkB,GADE,EAElBnB,WAAW,CAACoB,GAFM,EAGlBN,MAHkB,CAApB;IAMAT,OAAO,CAAC;MAAEW,aAAF;MAAiBE;IAAjB,CAAD,CAAP;EACD;;EACDb,OAAO,CAAC;IAAEW,aAAa,EAAEK,SAAjB;IAA4BH,WAAW,EAAEG;EAAzC,CAAD,CAAP;AACD,CAhBD,CADF;;AAmBA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;EACxBrB,IAAI,CAACsB,IAAL,CAAU;IACRC,IAAI,EAAE,OADE;IAERC,KAAK,EAAE,oBAFC;IAGRC,IAAI,EAAEJ,KAAK,CAACK,QAAN;EAHE,CAAV;AAKD;;AAED,SAASzB,aAAT,EAAwBmB,SAAxB"},"metadata":{},"sourceType":"module"}